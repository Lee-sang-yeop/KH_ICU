<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">


<resultMap type="member" id="memberResultSet">
	<result column="MEM_NO" property="memNo"/>
	<result column="TABLE_CD" property="tableCd"/>
	<result column="MEM_ID" property="memId"/>
	<result column="MEM_PWD" property="memPwd"/>
	<result column="MEM_NICKNAME" property="memNickname"/>
	<result column="MEM_NAME" property="memName"/>
	<result column="PHONE" property="phone"/>
	<result column="EMAIL" property="email"/>
	<result column="ENROLL_DATE" property="enrollDate"/>
	<result column="MODIFY_DATE" property="modifyDate"/>
	<result column="ROLE" property="role"/>
	<result column="STATUS" property="status"/>
	<result column="B_STATUS" property="bStatus"/>
	<result column="SNS_TYPE" property="snsType"/>
</resultMap>

<resultMap type="image" id="imageResultSet">
	<result column="FILE_NO" property="fileNo"/>
	<result column="TABLE_CD" property="tableCd"/>
	<result column="ORIGIN_NAME" property="originName"/>
	<result column="CHANGE_NAME" property="changeName"/>
	<result column="MEM_NO" property="refTno"/>
	<result column="FILE_PATH" property="filePath"/>
	<result column="STATUS" property="status"/>
</resultMap>
	<!-- 회원가입  -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER(
			MEM_NO,
			MEM_ID,
			MEM_PWD,
			MEM_NICKNAME,
			MEM_NAME,
			PHONE,
			EMAIL
		) VALUES(
			SEQ_MEM.NEXTVAL,
			#{memId},
			#{memPwd},
			#{memNickname},
			#{memName},
			#{phone},
			#{email}
		)
	</insert>
	

	<!-- 아이디 중복확인 -->
	<select id="idCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEM_ID = #{checkId}
	</select>
	

	<!-- 닉네임 중복확인 -->
	<select id="nickCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEM_NICKNAME = #{checkNick}
	</select>
	
	<!-- 로그인 -->
	<select id="loginMember" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE MEM_ID = #{memId} AND STATUS = 'N'
	</select>
	
	<!-- 카카오 로그인 정보 찾기 -->
	<select id="findKakao" parameterType="java.util.HashMap" resultMap="memberResultSet">
		SELECT * FROM MEMBER WHERE MEM_NAME=#{name} AND MEM_ID=#{email} AND SNS_TYPE='K'
	</select>

	<!-- 카카오 로그인 정보 저장 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		INSERT INTO MEMBER(MEM_NO, MEM_NAME, MEM_NICKNAME, MEM_ID, SNS_TYPE)
			values(SEQ_MEM.NEXTVAL, #{name}, #{nickName}, #{email}, 'K')
	</insert>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="member" resultType="String">
		SELECT MEM_ID FROM MEMBER WHERE MEM_NAME=#{memName} AND PHONE=#{phone}
	</select>
	
	<!-- 아이디 찾기 2 -->
	<select id="selectId" parameterType="member" resultType="String">
		SELECT MEM_ID FROM MEMBER WHERE MEM_ID=#{memId} 
	</select>
	
	<!-- 임시비밀번호 변경 -->
	<update id="updatePwd" >
		UPDATE MEMBER SET MEM_PWD = #{memPwd}, MODIFY_DATE = SYSDATE WHERE MEM_ID = #{memId}
	</update>
	
	<!-- 이메일 조회 -->
	<select id="selectEmail" parameterType="member" resultType="String">
		SELECT EMAIL FROM MEMBER
		WHERE EMAIL = #{email} 
	</select>
	
	<select id="selectMember"  resultMap="memberResultSet">
		SELECT * FROM MEMBER WHERE MEM_ID=#{memId} AND EMAIL=#{email} AND STATUS='N'
	</select>
	
	<!-- 네이버 로그인 정보 찾기 -->  
	<select id="findMember" parameterType="member" resultMap="memberResultSet">
		SELECT * FROM MEMBER WHERE MEM_NAME=#{memName} AND MEM_ID=#{memId} AND SNS_TYPE='N'
	</select>

	<!-- 네이버 로그인 정보 저장 -->  
	<insert id="getUserInfoN" parameterType="member" >
		INSERT INTO MEMBER(MEM_NO, MEM_NAME, MEM_NICKNAME, MEM_ID, SNS_TYPE)
			values(SEQ_MEM.NEXTVAL, #{memName}, #{memNickname}, #{memId}, 'N')
	</insert>
	
	<select id="selectProfile" parameterType="int" resultMap="imageResultSet">
		SELECT *
		FROM IMAGE
		WHERE REF_TNO = #{memNo}
		AND TABLE_CD = 'M'
	</select>
	
	<insert id="insertImg" parameterType="image">
		INSERT INTO IMAGE(FILE_NO,
						  TABLE_CD,
						  ORIGIN_NAME,
						  CHANGE_NAME,
						  REF_TNO,
						  FILE_PATH)
		VALUES(SEQ_FNO.NEXTVAL, 'M', #{originName}, #{changeName}, #{refTno}, #{filePath})
	</insert>
	
	<!-- 회원이미지 삭제 -->
	<delete id="deleteImg">
		DELETE FROM IMAGE
		WHERE FILE_NO = #{fileNo}
	</delete>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
		SET MEM_NAME = #{memName},
			EMAIL = #{email},
			MEM_NICKNAME = #{memNickname},
			MEM_ID = #{memId},
			MEM_PWD = #{memPwd},
			PHONE = #{phone},
			MODIFY_DATE = SYSDATE
		WHERE MEM_ID = #{memId}
	</update>
	

	<update id="updateImg" parameterType="image">
		UPDATE IMAGE
		SET  ORIGIN_NAME = #{originName},
			 CHANGE_NAME = #{changeName}
		WHERE REF_TNO = #{refTno} AND TABLE_CD = 'M'
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteMember" parameterType="string">
		UPDATE MEMBER
		SET STATUS = 'Y',
			MODIFY_DATE = SYSDATE
		WHERE MEM_ID = #{memId}
	</update>
	
	<select id="selectMemListCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS = 'N'
		AND ROLE = 'C'
	</select>
	
	<select id="selectMemList" resultMap="memberResultSet">
		SELECT
			MEM_NO,
			MEM_NAME,
			MEM_NICKNAME,
			EMAIL,
			PHONE,
			ENROLL_DATE
		FROM MEMBER
		WHERE STATUS = 'N'
		AND ROLE = 'C'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="selectBlackListCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS = 'N'
		AND ROLE = 'C'
		AND B_STATUS = 'Y'
	</select>
	
	<select id="selectBlackList" resultMap="memberResultSet">
		SELECT
			MEM_NO,
			MEM_NAME,
			MEM_NICKNAME,
			EMAIL,
			PHONE,
			ENROLL_DATE
		FROM MEMBER
		WHERE STATUS = 'N'
		AND ROLE = 'C'
		AND B_STATUS = 'Y'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<update id="blackCancel" parameterType="int">
		UPDATE MEMBER
		SET B_STATUS = 'N'
		WHERE MEM_NO = #{memNo}
	</update>
	
	
</mapper>