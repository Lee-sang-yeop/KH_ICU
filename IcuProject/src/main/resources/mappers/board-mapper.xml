<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="boardMapper">
	<resultMap type="board" id="boardResultSet">
		<id column="BOARD_NO" property="boardNo"/>
		<result column="TABLE_CD" property="tableCd"/>
		<result column="MEM_NICKNAME" property="boardWriter"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="COUNT" property="count"/>
		<result column="STATUS" property="status"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="BOARD_WRITER" property="boardWriterNo"/>
	</resultMap>
	
	<resultMap type="reply" id="replyResultSet">
		<id column="REPLY_NO" property="replyNo"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="MEM_NICKNAME" property="replyWriter"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="REF_TNO" property="refTno"/>
		<result column="TABLE_CD" property="tableCd"/>
		<result column="STATUS" property="status"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
	</resultMap>
	
	<resultMap type="image" id="imageResultSet">
		<result column="FILE_NO" property="fileNo"/>
		<result column="TABLE_CD" property="tableCd"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="MEM_NO" property="refTno"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<!-- 
		자유게시판 리스트 조회 + 페이징처리
	 -->
	<select id="selectList" resultMap="boardResultSet">
		SELECT
			BOARD_NO,
			M.MEM_NICKNAME,
			BOARD_TITLE,
			CREATE_DATE,
			COUNT
		FROM BOARD B
		LEFT JOIN MEMBER M ON (B.BOARD_WRITER = M.MEM_NO)
		WHERE B.STATUS = 'N' AND ROLE = 'C'
		ORDER BY B.CREATE_DATE DESC
	</select>
	
	<select id="selectNotice" resultMap="boardResultSet">
		SELECT 
			BOARD_NO,
			MEM_NICKNAME,
			BOARD_TITLE,
			CREATE_DATE,
			COUNT
		FROM (
				SELECT 
					BOARD_NO, 
					M.MEM_NICKNAME, 
					BOARD_TITLE, 
					CREATE_DATE, 
					COUNT 
				FROM BOARD B 
				JOIN MEMBER M ON(BOARD_WRITER = MEM_NO)
				WHERE B.STATUS = 'N' AND ROLE = 'A' ORDER BY CREATE_DATE DESC
			)
		<![CDATA[WHERE ROWNUM <= 3]]>
	</select>
	
	<!--
		게시글 리스트 개수 카운트
	 -->
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON(BOARD_WRITER = MEM_NO)
		WHERE B.STATUS = 'N' AND ROLE = 'C'
	</select>
	
	<!--
		게시글 검색후 리스트 조회(페이징처리 paramMap에 포함)
	 -->
	<select id="searchSelectList" resultMap="boardResultSet">
		SELECT
			BOARD_NO,
			BOARD_TITLE,
			M.MEM_NICKNAME,
			COUNT,
			CREATE_DATE
		FROM BOARD B
		LEFT JOIN MEMBER M ON (B.BOARD_WRITER = M.MEM_NO)
		WHERE B.STATUS = 'N'
		<if test = "keyword != null and keyword != ''">
			AND
			<choose>
				<when test="condition == 'title'">
					BOARD_TITLE LIKE '%${keyword}%'
				</when>
				<when test="condition == 'writer'">
					M.MEM_NICKNAME LIKE '%${keyword}%'
				</when>
				<when test="condition == 'content'">
					BOARD_CONTENT LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
		ORDER BY B.CREATE_DATE DESC
	</select>
	
	<!--
		게시글 검색후 개수 카운트
	 -->
	<select id="selectSearchListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		LEFT JOIN MEMBER M ON (B.BOARD_WRITER = M.MEM_NO)
		WHERE B.STATUS = 'N'
		<if test="keyword != null and keyword != ''">
			AND
			<choose>
				<when test="condition == 'title'">
					BOARD_TITLE LIKE '%${keyword}%'
				</when>
				<when test="condition == 'writer'">
					M.MEM_NICKNAME LIKE '%${keyword}%'
				</when>
				<when test="condition == 'content'">
					BOARD_CONTENT LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
	</select>
	
	<!--
		게시글 선택후 상세페이지
	 -->
	<select id="selectBoard" parameterType="int" resultMap="boardResultSet">
		SELECT
			BOARD_NO,
			M.MEM_NICKNAME,
			BOARD_TITLE,
			BOARD_CONTENT,
			I.CHANGE_NAME AS "CHANGE_NAME",
         	I.FILE_PATH AS "FILE_PATH",
         	BOARD_WRITER
		FROM BOARD B
		LEFT JOIN MEMBER M ON (B.BOARD_WRITER = M.MEM_NO)
		LEFT JOIN IMAGE I ON(I.REF_TNO = M.MEM_NO) AND I.TABLE_CD = 'M'
		WHERE BOARD_NO = #{boardNo} AND B.STATUS='N' 
	</select>
	
	<!--
		게시글 댓글 리스트 조회
	 -->
	<select id="selectReply" parameterType="int" resultMap="replyResultSet">
	  SELECT 
         R.REF_TNO,
         R.REPLY_NO,
         R.REPLY_CONTENT,
         MEM_NICKNAME,
         R.CREATE_DATE,
         I.CHANGE_NAME AS "CHANGE_NAME",
         I.FILE_PATH AS "FILE_PATH"
      FROM REPLY R
      LEFT JOIN BOARD  ON (BOARD_NO = R.REF_TNO)
      LEFT JOIN MEMBER M  ON (R.REPLY_WRITER = MEM_NO)
	  LEFT JOIN IMAGE I ON(I.REF_TNO = R.REPLY_WRITER) AND I.TABLE_CD = 'M'
      WHERE BOARD_NO = #{boardNo} AND  R.STATUS = 'N' AND R.TABLE_CD = 'B'
      ORDER BY R.CREATE_DATE ASC
	</select>
	
	<!--
		게시글 작성하기
	 -->
	<insert id="insertBoard" parameterType="board" useGeneratedKeys="true">
	
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO BOARD(
			BOARD_NO,
			BOARD_TITLE,
			BOARD_WRITER,
			BOARD_CONTENT
		) VALUES(
			#{boardNo},
			#{boardTitle},
			#{boardWriter},
			#{boardContent}	
		)
		
	</insert>
	
	<!--
		게시글 수정하기
	 -->
	<update id="updateBoard" parameterType="board">
		UPDATE BOARD
		SET BOARD_TITLE = #{boardTitle},
			BOARD_CONTENT = #{boardContent}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!--
		게시글 조회수 증가
	 -->
	<update id="increaseCount" parameterType="int">
		UPDATE BOARD
		SET COUNT = COUNT +1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!--
		게시글 댓글 작성하기
	 -->
	<insert id="insertReply" parameterType="reply" >
		INSERT INTO REPLY(REPLY_NO, REPLY_WRITER, REF_TNO, REPLY_CONTENT , TABLE_CD)
		VALUES (SEQ_RNO.NEXTVAL, #{replyWriter}, #{refTno}, #{replyContent} , 'B')
	</insert>
	
	<!--
		게시글 삭제하기
	 -->
	<update id="deleteBoard" parameterType="int">
		UPDATE BOARD
        SET STATUS = 'Y'
        WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!--
		게시글 댓글 삭제하기
	 -->
	<update id="deleteReply" parameterType="int">
		UPDATE REPLY
        SET STATUS = 'Y'
        WHERE REPLY_NO = #{rno}
	</update>
	
	<select id="selectNoticeList" resultMap="boardResultSet">
		SELECT
			BOARD_NO,
			BOARD_TITLE,
			CREATE_DATE
		FROM BOARD B
		LEFT JOIN MEMBER M ON (B.BOARD_WRITER = M.MEM_NO)
		WHERE B.STATUS = 'N' AND ROLE = 'A'
		ORDER BY B.CREATE_DATE DESC
	</select>
</mapper>